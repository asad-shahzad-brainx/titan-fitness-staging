{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).

  Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true %}
{% endcomment %}
<div class="c-buyButtons" {{ block.shopify_attributes }}>
  {% if isSetProduct %}
    <set-add-to-cart data-set-add-to-cart>
      <div class="product-form">
        <div class="product-form__buttons c-buyButtons__form">
          <button
            type="submit"
            name="add"
            class="product-form__submit button button--full-width button--primary c-btn c-btn--medium c-btnPrimary c-btn--full"
            data-set-submit
          >
            {{ 'products.product.product_set' | t }}
          </button>
        </div>
      </div>
    </set-add-to-cart>
  {% else %}
    {%- if product != blank -%}
      {%- liquid
        assign gift_card_recipient_feature_active = false
        if block.settings.show_gift_card_recipient and product.gift_card?
          assign gift_card_recipient_feature_active = true
        endif

        assign show_dynamic_checkout = false
        if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
          assign show_dynamic_checkout = true
        endif
      -%}

      <div class="c-prodQty">
        <product-form
          class="product-form"
          data-hide-errors="{{ gift_card_recipient_feature_active }}"
          data-section-id="{{ section.id }}"
        >
          <div class="product-form__error-message-wrapper" role="alert" hidden>
            <svg
              aria-hidden="true"
              focusable="false"
              class="icon icon-error"
              viewBox="0 0 13 13"
            >
              <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
              <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
              <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
              <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
            </svg>
            <span class="product-form__error-message"></span>
          </div>

          {%- form 'product',
            product,
            id: product_form_id,
            class: 'form',
            novalidate: 'novalidate',
            data-type: 'add-to-cart-form'
          -%}

            {%- liquid
              if is_variant
                assign component_references = variant.metafields.custom.component_reference.value
              else
                assign component_references = product.selected_or_first_available_variant.metafields.custom.component_reference.value
              endif

              assign first_component_references = component_references | first
              assign found_component = false
              assign isBackOrdered = first_component_references.metafields.custom.backorder_status.value 
              assign backorderDate = first_component_references.metafields.custom.backorder_available_date.value 
              assign highestBackOrderDate = first_component_references.metafields.custom.backorder_available_date.value
              assign json_output = nil
              assign isAvailable = true 

              assign check_against_inventory = true
              assign all_components_meet_condition = true
              assign quantity_rule_soldout = false
              
              for component in component_references
                assign componentBackOrdered = component.metafields.custom.backorder_status.value
                assign componentBackOrderDate = component.metafields.custom.backorder_available_date.value
              
                if componentBackOrderDate > highestBackOrderDate
                  assign highestBackOrderDate = componentBackOrderDate
                endif
        
                if componentBackOrdered and found_component == false
                  assign isBackOrdered = componentBackOrdered
                  assign backorderDate = componentBackOrderDate
                  assign found_component = true
                elsif componentBackOrdered and componentBackOrderDate > backorderDate
                  assign isBackOrdered = componentBackOrdered
                  assign backorderDate = componentBackOrderDate
                endif
 
                if forloop.first
                  assign json_output = json_output | append: "[{ 'variantid': " | append: component.id | append: ", 'price': " | append: component.price | append: "},"
                elsif forloop.last
                  assign json_output = json_output | append: "{ 'variantid': " | append: component.id | append: ", 'price': " | append: component.price | append: "}]"
                else 
                  assign json_output = json_output | append: "{ 'variantid': " | append: component.id | append: ", 'price': " | append: component.price | append: "},"
                endif

                unless component.available
                  assign isAvailable = false
                endunless

                if component.inventory_management == 'shopify' and component.inventory_policy != 'continue'
                  assign all_components_meet_condition = false
                endif
              endfor
        
              unless isBackOrdered
                assign backorderDate = highestBackOrderDate
              endunless

              if all_components_meet_condition
                assign check_against_inventory = false
              endif

              for component in component_references
                if component.quantity_rule.min > component.inventory_quantity and check_against_inventory
                  assign quantity_rule_soldout = true
                endif
              endfor
            -%}
            <input
              type="hidden"
              name="id"
              value="{% if is_variant %}{{ variant.id }}{% else %}{{ product.selected_or_first_available_variant.id }}{% endif %}"
              disabled
              class="product-variant-id"
            >
            <input
              type="hidden"
              name="warranty_id"
              value=""
              disabled
              class="warranty-variant-id"
              data-warranty-id
            >
            <input
            id="backorder"
            type="hidden"
            {% if backorderDate != '' and isBackOrdered != false %}
              {%  assign formatted_date = backorderDate | date: '%m/%d/%Y' %}
                name="properties[Backorder]"
                value="{{ 'products.product.back_order_label' | t: date: formatted_date }}"
            {% endif %}
              >

            <input
              id="bundleprice"
              type="hidden"
              name="properties[_BundlePrice]"
              value={{ json_output | json }}
            >
            
            {%- if gift_card_recipient_feature_active -%}
              {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
            {%- endif -%}

            {% comment %} {%- liquid
              assign check_against_inventory = true
              if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                assign check_against_inventory = false
              endif
              if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                assign quantity_rule_soldout = true
              endif
            -%} {% endcomment %}

            <div
              class="product-form__buttons"
              id="{% if stickyAtc and stickyAtcID == "desktop" %}c-productFormButtons-stickydesktop-{{ section_id }}{% elsif stickyAtcID == "mobile"  %}c-productFormButtons-stickymobile-{{ section_id }}{% else %}c-productFormButtons-{{ section_id }}{% endif %}"
            >

              {% if isAvailable %}
                {%- liquid
                  assign component_references = product.selected_or_first_available_variant.metafields.custom.component_reference.value
                  assign first_component_references = component_references | first
                  assign backOrdered = first_component_references.metafields.custom.backorder_status.value
                  for component in component_references
                    assign componentBackOrdered = component.metafields.custom.backorder_status.value
                    if componentBackOrdered 
                      assign backOrdered = componentBackOrdered
                      break
                    endif
                  endfor
                -%}
                <button
                  id="ProductSubmitButton-{{ section_id }}"
                  type="submit"
                  name="add"
                  class="product-form__submit button button--full-width c-btn c-btnPrimary{% if stickyAtc %} c-btn--medium{% else %} c-btn--large{% endif %}"
                  {% if backOrdered %}
                    data-backordered
                  {% endif %}
                >
                  <span>
                    {% if backOrdered %}
                      {{ 'products.product.back_order' | t }}
                    {% else %}
                      {{ 'products.product.add_to_cart' | t }}
                    {% endif %}
                  </span>
                  <div class="loading-overlay__spinner hidden">
                    <svg
                      aria-hidden="true"
                      focusable="false"
                      class="spinner"
                      viewBox="0 0 66 66"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                </button>
              {% else %}
                <button
                  id="ProductSubmitButton-{{ section_id }}"
                  type="submit"
                  name="add"
                  class="product-form__submit button button--full-width klaviyo-bis-trigger c-btn c-btnTertiary{% if stickyAtc %} c-btn--medium{% else %} c-btn--large{% endif %}"
                >
                  <span>
                    {{ 'products.product.out_of_stock' | t }}
                  </span>
                  <div class="loading-overlay__spinner hidden">
                    <svg
                      aria-hidden="true"
                      focusable="false"
                      class="spinner"
                      viewBox="0 0 66 66"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                </button>
              {% endif %}
            </div>
            {%- if show_dynamic_checkout -%}
              {{ form | payment_button }}
            {%- endif -%}
          {%- endform -%}
        </product-form>
      </div>
    {%- endif -%}

    {%- if show_pickup_availability -%}
      {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

      {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
        | where: 'pick_up_enabled', true
      -%}

      <pickup-availability
        class="product__pickup-availabilities no-js-hidden quick-add-hidden"
        {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
          available
        {% endif %}
        data-root-url="{{ routes.root_url }}"
        data-variant-id="{{ product.selected_or_first_available_variant.id }}"
        data-has-only-default-variant="{{ product.has_only_default_variant }}"
      >
        <template>
          <pickup-availability-preview class="pickup-availability-preview">
            {% render 'icon-unavailable' %}
            <div class="pickup-availability-info">
              <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
              <button class="pickup-availability-button link link--text underlined-link">
                {{ 'products.product.pickup_availability.refresh' | t }}
              </button>
            </div>
          </pickup-availability-preview>
        </template>
      </pickup-availability>


    {%- endif -%}
  {% endif %}
  <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
</div>
