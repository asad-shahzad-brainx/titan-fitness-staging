{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.
  - template: {String} Renders the variants for PDP template (optional)

  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
    template: 'pdp'
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id

  assign colorCodes = product.metafields.custom.color_codes.value.color_codes
-%}

{% if option.name contains 'Color' or option.name contains 'color' %}
  <color-swatches>
    {%- for value in option.values -%}
      {%- liquid
        assign option_disabled = true

        for option1_name in variants_option1_arr
          case option.position
            when 1
              if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
            when 2
              if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
            when 3
              if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
          endcase
        endfor
      -%}

      {% assign colorHexCode = '' %}
      {% for color in colorCodes %}
        {% if color.color_name == value %}
          {% assign colorHexCode = color.color_hex_code %}
        {% endif %}
      {% endfor %}

      <div class="c-colorSwatchInputs">
        <input
          class="{% if option_disabled %} disabled{% endif %}"
          type="radio"
          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
          name="{{ option.name }}"
          data-color-selector
          value="{{ value | escape }}"
          form="{{ product_form_id }}"
          {% if option.selected_value == value %}
            checked
          {% endif %}
        >
        <label
          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
          class="c-colorSwatchLabel {% if option.selected_value == value %} checked{% endif %}"
        >
          <div class="c-colorSwatch c-colorSwatches__itemLink" style="background:{{ colorHexCode }};"></div>
        </label>
      </div>
    {%- endfor -%}
  </color-swatches>
{% endif %}

{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}

  {%- if block.settings.picker_type == 'button' -%}
    <span class="sr-only">
      Making a selection with these options will cause content on this page to change and update the product images.
    </span>
    {% if option.name contains 'Color' or option.name contains 'color' %}
    {% else %}
      <input
        type="radio"
        id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
        name="{{ option.name }}"
        value="{{ value | escape }}"
        form="{{ product_form_id }}"
        {% if option.selected_value == value %}
          checked
        {% endif %}
        {% if option_disabled %}
          class="disabled"
        {% endif %}
      >
      <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}" class="c-radioInputLabel c-b2">
        {{ value -}}
        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      </label>
    {% endif %}

  {%- elsif block.settings.picker_type == 'dropdown' -%}
    <option
      value="{{ value | escape }}"
      {% if option.selected_value == value %}
        selected="selected"
      {% endif %}
    >
      {% if option_disabled -%}
        {{- 'products.product.value_unavailable' | t: option_value: value -}}
      {%- else -%}
        {{- value -}}
      {%- endif %}
    </option>
  {%- endif -%}
{%- endfor -%}
